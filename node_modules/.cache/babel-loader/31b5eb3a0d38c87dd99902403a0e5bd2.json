{"ast":null,"code":"import { getBatchedUpdates, scheduleMicrotask } from './utils'; // TYPES\n// CLASS\n\nexport var NotifyManager = /*#__PURE__*/function () {\n  function NotifyManager() {\n    this.queue = [];\n    this.transactions = 0;\n  }\n\n  var _proto = NotifyManager.prototype;\n\n  _proto.batch = function batch(callback) {\n    this.transactions++;\n    var result = callback();\n    this.transactions--;\n\n    if (!this.transactions) {\n      this.flush();\n    }\n\n    return result;\n  };\n\n  _proto.schedule = function schedule(notify) {\n    if (this.transactions) {\n      this.queue.push(notify);\n    } else {\n      scheduleMicrotask(function () {\n        notify();\n      });\n    }\n  };\n\n  _proto.flush = function flush() {\n    var queue = this.queue;\n    this.queue = [];\n\n    if (queue.length) {\n      scheduleMicrotask(function () {\n        var batchedUpdates = getBatchedUpdates();\n        batchedUpdates(function () {\n          queue.forEach(function (notify) {\n            notify();\n          });\n        });\n      });\n    }\n  };\n\n  return NotifyManager;\n}(); // SINGLETON\n\nexport var notifyManager = new NotifyManager();","map":{"version":3,"names":["getBatchedUpdates","scheduleMicrotask","NotifyManager","queue","transactions","_proto","prototype","batch","callback","result","flush","schedule","notify","push","length","batchedUpdates","forEach","notifyManager"],"sources":["/Users/rohangore/Documents/jesting-react/node_modules/react-query/es/core/notifyManager.js"],"sourcesContent":["import { getBatchedUpdates, scheduleMicrotask } from './utils'; // TYPES\n\n// CLASS\nexport var NotifyManager = /*#__PURE__*/function () {\n  function NotifyManager() {\n    this.queue = [];\n    this.transactions = 0;\n  }\n\n  var _proto = NotifyManager.prototype;\n\n  _proto.batch = function batch(callback) {\n    this.transactions++;\n    var result = callback();\n    this.transactions--;\n\n    if (!this.transactions) {\n      this.flush();\n    }\n\n    return result;\n  };\n\n  _proto.schedule = function schedule(notify) {\n    if (this.transactions) {\n      this.queue.push(notify);\n    } else {\n      scheduleMicrotask(function () {\n        notify();\n      });\n    }\n  };\n\n  _proto.flush = function flush() {\n    var queue = this.queue;\n    this.queue = [];\n\n    if (queue.length) {\n      scheduleMicrotask(function () {\n        var batchedUpdates = getBatchedUpdates();\n        batchedUpdates(function () {\n          queue.forEach(function (notify) {\n            notify();\n          });\n        });\n      });\n    }\n  };\n\n  return NotifyManager;\n}(); // SINGLETON\n\nexport var notifyManager = new NotifyManager();"],"mappings":"AAAA,SAASA,iBAAT,EAA4BC,iBAA5B,QAAqD,SAArD,C,CAAgE;AAEhE;;AACA,OAAO,IAAIC,aAAa,GAAG,aAAa,YAAY;EAClD,SAASA,aAAT,GAAyB;IACvB,KAAKC,KAAL,GAAa,EAAb;IACA,KAAKC,YAAL,GAAoB,CAApB;EACD;;EAED,IAAIC,MAAM,GAAGH,aAAa,CAACI,SAA3B;;EAEAD,MAAM,CAACE,KAAP,GAAe,SAASA,KAAT,CAAeC,QAAf,EAAyB;IACtC,KAAKJ,YAAL;IACA,IAAIK,MAAM,GAAGD,QAAQ,EAArB;IACA,KAAKJ,YAAL;;IAEA,IAAI,CAAC,KAAKA,YAAV,EAAwB;MACtB,KAAKM,KAAL;IACD;;IAED,OAAOD,MAAP;EACD,CAVD;;EAYAJ,MAAM,CAACM,QAAP,GAAkB,SAASA,QAAT,CAAkBC,MAAlB,EAA0B;IAC1C,IAAI,KAAKR,YAAT,EAAuB;MACrB,KAAKD,KAAL,CAAWU,IAAX,CAAgBD,MAAhB;IACD,CAFD,MAEO;MACLX,iBAAiB,CAAC,YAAY;QAC5BW,MAAM;MACP,CAFgB,CAAjB;IAGD;EACF,CARD;;EAUAP,MAAM,CAACK,KAAP,GAAe,SAASA,KAAT,GAAiB;IAC9B,IAAIP,KAAK,GAAG,KAAKA,KAAjB;IACA,KAAKA,KAAL,GAAa,EAAb;;IAEA,IAAIA,KAAK,CAACW,MAAV,EAAkB;MAChBb,iBAAiB,CAAC,YAAY;QAC5B,IAAIc,cAAc,GAAGf,iBAAiB,EAAtC;QACAe,cAAc,CAAC,YAAY;UACzBZ,KAAK,CAACa,OAAN,CAAc,UAAUJ,MAAV,EAAkB;YAC9BA,MAAM;UACP,CAFD;QAGD,CAJa,CAAd;MAKD,CAPgB,CAAjB;IAQD;EACF,CAdD;;EAgBA,OAAOV,aAAP;AACD,CA/CuC,EAAjC,C,CA+CF;;AAEL,OAAO,IAAIe,aAAa,GAAG,IAAIf,aAAJ,EAApB"},"metadata":{},"sourceType":"module"}