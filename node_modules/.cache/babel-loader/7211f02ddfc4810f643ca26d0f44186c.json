{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { deepIncludes, getQueryArgs, isDocumentVisible, isOnline, isPlainObject, isServer, noop } from './utils';\nimport { getResolvedQueryConfig as _getResolvedQueryConfig } from './config';\nimport { Query } from './query';\nimport { notifyManager } from './notifyManager';\nimport { QueryObserver } from './queryObserver'; // TYPES\n// CLASS\n\nexport var QueryCache = /*#__PURE__*/function () {\n  function QueryCache(config) {\n    this.config = config || {};\n    this.globalListeners = [];\n    this.queries = {};\n    this.queriesArray = [];\n    this.isFetching = 0;\n  }\n\n  var _proto = QueryCache.prototype;\n\n  _proto.notifyGlobalListeners = function notifyGlobalListeners(query) {\n    var _this = this;\n\n    this.isFetching = this.getQueries().reduce(function (acc, q) {\n      return q.state.isFetching ? acc + 1 : acc;\n    }, 0);\n    notifyManager.batch(function () {\n      _this.globalListeners.forEach(function (listener) {\n        notifyManager.schedule(function () {\n          listener(_this, query);\n        });\n      });\n    });\n  };\n\n  _proto.getDefaultConfig = function getDefaultConfig() {\n    return this.config.defaultConfig;\n  };\n\n  _proto.getResolvedQueryConfig = function getResolvedQueryConfig(queryKey, config) {\n    return _getResolvedQueryConfig(this, queryKey, undefined, config);\n  };\n\n  _proto.subscribe = function subscribe(listener) {\n    var _this2 = this;\n\n    this.globalListeners.push(listener);\n    return function () {\n      _this2.globalListeners = _this2.globalListeners.filter(function (x) {\n        return x !== listener;\n      });\n    };\n  };\n\n  _proto.clear = function clear(options) {\n    this.removeQueries();\n\n    if (options == null ? void 0 : options.notify) {\n      this.notifyGlobalListeners();\n    }\n  };\n\n  _proto.getQueries = function getQueries(predicate, options) {\n    var anyKey = predicate === true || typeof predicate === 'undefined';\n\n    if (anyKey && !options) {\n      return this.queriesArray;\n    }\n\n    var predicateFn;\n\n    if (typeof predicate === 'function') {\n      predicateFn = predicate;\n    } else {\n      var _ref = options || {},\n          exact = _ref.exact,\n          active = _ref.active,\n          stale = _ref.stale;\n\n      var resolvedConfig = this.getResolvedQueryConfig(predicate);\n\n      predicateFn = function predicateFn(query) {\n        // Check query key if needed\n        if (!anyKey) {\n          if (exact) {\n            // Check if the query key matches exactly\n            if (query.queryHash !== resolvedConfig.queryHash) {\n              return false;\n            }\n          } else {\n            // Check if the query key matches partially\n            if (!deepIncludes(query.queryKey, resolvedConfig.queryKey)) {\n              return false;\n            }\n          }\n        } // Check active state if needed\n\n\n        if (typeof active === 'boolean' && query.isActive() !== active) {\n          return false;\n        } // Check stale state if needed\n\n\n        if (typeof stale === 'boolean' && query.isStale() !== stale) {\n          return false;\n        }\n\n        return true;\n      };\n    }\n\n    return this.queriesArray.filter(predicateFn);\n  };\n\n  _proto.getQuery = function getQuery(predicate) {\n    return this.getQueries(predicate, {\n      exact: true\n    })[0];\n  };\n\n  _proto.getQueryByHash = function getQueryByHash(queryHash) {\n    return this.queries[queryHash];\n  };\n\n  _proto.getQueryData = function getQueryData(predicate) {\n    var _this$getQuery;\n\n    return (_this$getQuery = this.getQuery(predicate)) == null ? void 0 : _this$getQuery.state.data;\n  };\n\n  _proto.removeQuery = function removeQuery(query) {\n    if (this.queries[query.queryHash]) {\n      query.destroy();\n      delete this.queries[query.queryHash];\n      this.queriesArray = this.queriesArray.filter(function (x) {\n        return x !== query;\n      });\n      this.notifyGlobalListeners(query);\n    }\n  };\n\n  _proto.removeQueries = function removeQueries(predicate, options) {\n    var _this3 = this;\n\n    this.getQueries(predicate, options).forEach(function (query) {\n      _this3.removeQuery(query);\n    });\n  };\n\n  _proto.cancelQueries = function cancelQueries(predicate, options) {\n    this.getQueries(predicate, options).forEach(function (query) {\n      query.cancel();\n    });\n  }\n  /**\n   * @return Promise resolving to an array with the invalidated queries.\n   */\n  ;\n\n  _proto.invalidateQueries = function invalidateQueries(predicate, options) {\n    var queries = this.getQueries(predicate, options);\n    notifyManager.batch(function () {\n      queries.forEach(function (query) {\n        query.invalidate();\n      });\n    });\n\n    var _ref2 = options || {},\n        _ref2$refetchActive = _ref2.refetchActive,\n        refetchActive = _ref2$refetchActive === void 0 ? true : _ref2$refetchActive,\n        _ref2$refetchInactive = _ref2.refetchInactive,\n        refetchInactive = _ref2$refetchInactive === void 0 ? false : _ref2$refetchInactive;\n\n    if (!refetchInactive && !refetchActive) {\n      return Promise.resolve(queries);\n    }\n\n    var refetchOptions = _extends({}, options);\n\n    if (refetchActive && !refetchInactive) {\n      refetchOptions.active = true;\n    } else if (refetchInactive && !refetchActive) {\n      refetchOptions.active = false;\n    }\n\n    var promise = this.refetchQueries(predicate, refetchOptions);\n\n    if (!(options == null ? void 0 : options.throwOnError)) {\n      promise = promise.catch(function () {\n        return queries;\n      });\n    }\n\n    return promise.then(function () {\n      return queries;\n    });\n  }\n  /**\n   * @return Promise resolving to an array with the refetched queries.\n   */\n  ;\n\n  _proto.refetchQueries = function refetchQueries(predicate, options) {\n    var _this4 = this;\n\n    var promises = [];\n    notifyManager.batch(function () {\n      _this4.getQueries(predicate, options).forEach(function (query) {\n        var promise = query.fetch().then(function () {\n          return query;\n        });\n\n        if (!(options == null ? void 0 : options.throwOnError)) {\n          promise = promise.catch(function () {\n            return query;\n          });\n        }\n\n        promises.push(promise);\n      });\n    });\n    return Promise.all(promises);\n  };\n\n  _proto.resetErrorBoundaries = function resetErrorBoundaries() {\n    this.getQueries().forEach(function (query) {\n      query.state.throwInErrorBoundary = false;\n    });\n  };\n\n  _proto.buildQuery = function buildQuery(queryKey, config) {\n    var resolvedConfig = this.getResolvedQueryConfig(queryKey, config);\n    var query = this.getQueryByHash(resolvedConfig.queryHash);\n\n    if (!query) {\n      query = this.createQuery(resolvedConfig);\n    }\n\n    return query;\n  };\n\n  _proto.createQuery = function createQuery(config) {\n    var query = new Query(config); // A frozen cache does not add new queries to the cache\n\n    if (!this.config.frozen) {\n      this.queries[query.queryHash] = query;\n      this.queriesArray.push(query);\n      this.notifyGlobalListeners(query);\n    }\n\n    return query;\n  } // Parameter syntax\n  ; // Implementation\n\n\n  _proto.fetchQuery = function fetchQuery(arg1, arg2, arg3) {\n    var _getQueryArgs = getQueryArgs(arg1, arg2, arg3),\n        queryKey = _getQueryArgs[0],\n        config = _getQueryArgs[1];\n\n    var resolvedConfig = this.getResolvedQueryConfig(queryKey, _extends({\n      // https://github.com/tannerlinsley/react-query/issues/652\n      retry: false\n    }, config));\n    var query = this.getQueryByHash(resolvedConfig.queryHash);\n\n    if (!query) {\n      query = this.createQuery(resolvedConfig);\n    }\n\n    if (!query.isStaleByTime(config.staleTime)) {\n      return Promise.resolve(query.state.data);\n    }\n\n    return query.fetch(undefined, resolvedConfig);\n  } // Parameter syntax with optional prefetch options\n  ; // Implementation\n\n\n  _proto.prefetchQuery = function prefetchQuery(arg1, arg2, arg3, arg4) {\n    if (isPlainObject(arg2) && (arg2.hasOwnProperty('throwOnError') || arg2.hasOwnProperty('force'))) {\n      arg4 = arg2;\n      arg2 = undefined;\n      arg3 = undefined;\n    }\n\n    var _getQueryArgs2 = getQueryArgs(arg1, arg2, arg3, arg4),\n        queryKey = _getQueryArgs2[0],\n        config = _getQueryArgs2[1],\n        options = _getQueryArgs2[2];\n\n    if (options == null ? void 0 : options.force) {\n      config.staleTime = 0;\n    }\n\n    var promise = this.fetchQuery(queryKey, config);\n\n    if (!(options == null ? void 0 : options.throwOnError)) {\n      promise = promise.catch(noop);\n    }\n\n    return promise;\n  } // Parameter syntax\n  ; // Implementation\n\n\n  _proto.watchQuery = function watchQuery(arg1, arg2, arg3) {\n    var _getQueryArgs3 = getQueryArgs(arg1, arg2, arg3),\n        queryKey = _getQueryArgs3[0],\n        config = _getQueryArgs3[1];\n\n    var resolvedConfig = this.getResolvedQueryConfig(queryKey, config);\n    return new QueryObserver(resolvedConfig);\n  };\n\n  _proto.setQueryData = function setQueryData(queryKey, updater, config) {\n    this.buildQuery(queryKey, config).setData(updater);\n  };\n\n  return QueryCache;\n}();\nvar defaultQueryCache = new QueryCache({\n  frozen: isServer\n});\nexport { defaultQueryCache as queryCache };\nexport var queryCaches = [defaultQueryCache];\n/**\n * @deprecated\n */\n\nexport function makeQueryCache(config) {\n  return new QueryCache(config);\n}\nexport function onVisibilityOrOnlineChange(type) {\n  if (isDocumentVisible() && isOnline()) {\n    notifyManager.batch(function () {\n      queryCaches.forEach(function (queryCache) {\n        queryCache.getQueries().forEach(function (query) {\n          query.onInteraction(type);\n        });\n      });\n    });\n  }\n}","map":{"version":3,"names":["_extends","deepIncludes","getQueryArgs","isDocumentVisible","isOnline","isPlainObject","isServer","noop","getResolvedQueryConfig","_getResolvedQueryConfig","Query","notifyManager","QueryObserver","QueryCache","config","globalListeners","queries","queriesArray","isFetching","_proto","prototype","notifyGlobalListeners","query","_this","getQueries","reduce","acc","q","state","batch","forEach","listener","schedule","getDefaultConfig","defaultConfig","queryKey","undefined","subscribe","_this2","push","filter","x","clear","options","removeQueries","notify","predicate","anyKey","predicateFn","_ref","exact","active","stale","resolvedConfig","queryHash","isActive","isStale","getQuery","getQueryByHash","getQueryData","_this$getQuery","data","removeQuery","destroy","_this3","cancelQueries","cancel","invalidateQueries","invalidate","_ref2","_ref2$refetchActive","refetchActive","_ref2$refetchInactive","refetchInactive","Promise","resolve","refetchOptions","promise","refetchQueries","throwOnError","catch","then","_this4","promises","fetch","all","resetErrorBoundaries","throwInErrorBoundary","buildQuery","createQuery","frozen","fetchQuery","arg1","arg2","arg3","_getQueryArgs","retry","isStaleByTime","staleTime","prefetchQuery","arg4","hasOwnProperty","_getQueryArgs2","force","watchQuery","_getQueryArgs3","setQueryData","updater","setData","defaultQueryCache","queryCache","queryCaches","makeQueryCache","onVisibilityOrOnlineChange","type","onInteraction"],"sources":["/Users/rohangore/Documents/jesting-react/node_modules/react-query/es/core/queryCache.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { deepIncludes, getQueryArgs, isDocumentVisible, isOnline, isPlainObject, isServer, noop } from './utils';\nimport { getResolvedQueryConfig as _getResolvedQueryConfig } from './config';\nimport { Query } from './query';\nimport { notifyManager } from './notifyManager';\nimport { QueryObserver } from './queryObserver'; // TYPES\n\n// CLASS\nexport var QueryCache = /*#__PURE__*/function () {\n  function QueryCache(config) {\n    this.config = config || {};\n    this.globalListeners = [];\n    this.queries = {};\n    this.queriesArray = [];\n    this.isFetching = 0;\n  }\n\n  var _proto = QueryCache.prototype;\n\n  _proto.notifyGlobalListeners = function notifyGlobalListeners(query) {\n    var _this = this;\n\n    this.isFetching = this.getQueries().reduce(function (acc, q) {\n      return q.state.isFetching ? acc + 1 : acc;\n    }, 0);\n    notifyManager.batch(function () {\n      _this.globalListeners.forEach(function (listener) {\n        notifyManager.schedule(function () {\n          listener(_this, query);\n        });\n      });\n    });\n  };\n\n  _proto.getDefaultConfig = function getDefaultConfig() {\n    return this.config.defaultConfig;\n  };\n\n  _proto.getResolvedQueryConfig = function getResolvedQueryConfig(queryKey, config) {\n    return _getResolvedQueryConfig(this, queryKey, undefined, config);\n  };\n\n  _proto.subscribe = function subscribe(listener) {\n    var _this2 = this;\n\n    this.globalListeners.push(listener);\n    return function () {\n      _this2.globalListeners = _this2.globalListeners.filter(function (x) {\n        return x !== listener;\n      });\n    };\n  };\n\n  _proto.clear = function clear(options) {\n    this.removeQueries();\n\n    if (options == null ? void 0 : options.notify) {\n      this.notifyGlobalListeners();\n    }\n  };\n\n  _proto.getQueries = function getQueries(predicate, options) {\n    var anyKey = predicate === true || typeof predicate === 'undefined';\n\n    if (anyKey && !options) {\n      return this.queriesArray;\n    }\n\n    var predicateFn;\n\n    if (typeof predicate === 'function') {\n      predicateFn = predicate;\n    } else {\n      var _ref = options || {},\n          exact = _ref.exact,\n          active = _ref.active,\n          stale = _ref.stale;\n\n      var resolvedConfig = this.getResolvedQueryConfig(predicate);\n\n      predicateFn = function predicateFn(query) {\n        // Check query key if needed\n        if (!anyKey) {\n          if (exact) {\n            // Check if the query key matches exactly\n            if (query.queryHash !== resolvedConfig.queryHash) {\n              return false;\n            }\n          } else {\n            // Check if the query key matches partially\n            if (!deepIncludes(query.queryKey, resolvedConfig.queryKey)) {\n              return false;\n            }\n          }\n        } // Check active state if needed\n\n\n        if (typeof active === 'boolean' && query.isActive() !== active) {\n          return false;\n        } // Check stale state if needed\n\n\n        if (typeof stale === 'boolean' && query.isStale() !== stale) {\n          return false;\n        }\n\n        return true;\n      };\n    }\n\n    return this.queriesArray.filter(predicateFn);\n  };\n\n  _proto.getQuery = function getQuery(predicate) {\n    return this.getQueries(predicate, {\n      exact: true\n    })[0];\n  };\n\n  _proto.getQueryByHash = function getQueryByHash(queryHash) {\n    return this.queries[queryHash];\n  };\n\n  _proto.getQueryData = function getQueryData(predicate) {\n    var _this$getQuery;\n\n    return (_this$getQuery = this.getQuery(predicate)) == null ? void 0 : _this$getQuery.state.data;\n  };\n\n  _proto.removeQuery = function removeQuery(query) {\n    if (this.queries[query.queryHash]) {\n      query.destroy();\n      delete this.queries[query.queryHash];\n      this.queriesArray = this.queriesArray.filter(function (x) {\n        return x !== query;\n      });\n      this.notifyGlobalListeners(query);\n    }\n  };\n\n  _proto.removeQueries = function removeQueries(predicate, options) {\n    var _this3 = this;\n\n    this.getQueries(predicate, options).forEach(function (query) {\n      _this3.removeQuery(query);\n    });\n  };\n\n  _proto.cancelQueries = function cancelQueries(predicate, options) {\n    this.getQueries(predicate, options).forEach(function (query) {\n      query.cancel();\n    });\n  }\n  /**\n   * @return Promise resolving to an array with the invalidated queries.\n   */\n  ;\n\n  _proto.invalidateQueries = function invalidateQueries(predicate, options) {\n    var queries = this.getQueries(predicate, options);\n    notifyManager.batch(function () {\n      queries.forEach(function (query) {\n        query.invalidate();\n      });\n    });\n\n    var _ref2 = options || {},\n        _ref2$refetchActive = _ref2.refetchActive,\n        refetchActive = _ref2$refetchActive === void 0 ? true : _ref2$refetchActive,\n        _ref2$refetchInactive = _ref2.refetchInactive,\n        refetchInactive = _ref2$refetchInactive === void 0 ? false : _ref2$refetchInactive;\n\n    if (!refetchInactive && !refetchActive) {\n      return Promise.resolve(queries);\n    }\n\n    var refetchOptions = _extends({}, options);\n\n    if (refetchActive && !refetchInactive) {\n      refetchOptions.active = true;\n    } else if (refetchInactive && !refetchActive) {\n      refetchOptions.active = false;\n    }\n\n    var promise = this.refetchQueries(predicate, refetchOptions);\n\n    if (!(options == null ? void 0 : options.throwOnError)) {\n      promise = promise.catch(function () {\n        return queries;\n      });\n    }\n\n    return promise.then(function () {\n      return queries;\n    });\n  }\n  /**\n   * @return Promise resolving to an array with the refetched queries.\n   */\n  ;\n\n  _proto.refetchQueries = function refetchQueries(predicate, options) {\n    var _this4 = this;\n\n    var promises = [];\n    notifyManager.batch(function () {\n      _this4.getQueries(predicate, options).forEach(function (query) {\n        var promise = query.fetch().then(function () {\n          return query;\n        });\n\n        if (!(options == null ? void 0 : options.throwOnError)) {\n          promise = promise.catch(function () {\n            return query;\n          });\n        }\n\n        promises.push(promise);\n      });\n    });\n    return Promise.all(promises);\n  };\n\n  _proto.resetErrorBoundaries = function resetErrorBoundaries() {\n    this.getQueries().forEach(function (query) {\n      query.state.throwInErrorBoundary = false;\n    });\n  };\n\n  _proto.buildQuery = function buildQuery(queryKey, config) {\n    var resolvedConfig = this.getResolvedQueryConfig(queryKey, config);\n    var query = this.getQueryByHash(resolvedConfig.queryHash);\n\n    if (!query) {\n      query = this.createQuery(resolvedConfig);\n    }\n\n    return query;\n  };\n\n  _proto.createQuery = function createQuery(config) {\n    var query = new Query(config); // A frozen cache does not add new queries to the cache\n\n    if (!this.config.frozen) {\n      this.queries[query.queryHash] = query;\n      this.queriesArray.push(query);\n      this.notifyGlobalListeners(query);\n    }\n\n    return query;\n  } // Parameter syntax\n  ;\n\n  // Implementation\n  _proto.fetchQuery = function fetchQuery(arg1, arg2, arg3) {\n    var _getQueryArgs = getQueryArgs(arg1, arg2, arg3),\n        queryKey = _getQueryArgs[0],\n        config = _getQueryArgs[1];\n\n    var resolvedConfig = this.getResolvedQueryConfig(queryKey, _extends({\n      // https://github.com/tannerlinsley/react-query/issues/652\n      retry: false\n    }, config));\n    var query = this.getQueryByHash(resolvedConfig.queryHash);\n\n    if (!query) {\n      query = this.createQuery(resolvedConfig);\n    }\n\n    if (!query.isStaleByTime(config.staleTime)) {\n      return Promise.resolve(query.state.data);\n    }\n\n    return query.fetch(undefined, resolvedConfig);\n  } // Parameter syntax with optional prefetch options\n  ;\n\n  // Implementation\n  _proto.prefetchQuery = function prefetchQuery(arg1, arg2, arg3, arg4) {\n    if (isPlainObject(arg2) && (arg2.hasOwnProperty('throwOnError') || arg2.hasOwnProperty('force'))) {\n      arg4 = arg2;\n      arg2 = undefined;\n      arg3 = undefined;\n    }\n\n    var _getQueryArgs2 = getQueryArgs(arg1, arg2, arg3, arg4),\n        queryKey = _getQueryArgs2[0],\n        config = _getQueryArgs2[1],\n        options = _getQueryArgs2[2];\n\n    if (options == null ? void 0 : options.force) {\n      config.staleTime = 0;\n    }\n\n    var promise = this.fetchQuery(queryKey, config);\n\n    if (!(options == null ? void 0 : options.throwOnError)) {\n      promise = promise.catch(noop);\n    }\n\n    return promise;\n  } // Parameter syntax\n  ;\n\n  // Implementation\n  _proto.watchQuery = function watchQuery(arg1, arg2, arg3) {\n    var _getQueryArgs3 = getQueryArgs(arg1, arg2, arg3),\n        queryKey = _getQueryArgs3[0],\n        config = _getQueryArgs3[1];\n\n    var resolvedConfig = this.getResolvedQueryConfig(queryKey, config);\n    return new QueryObserver(resolvedConfig);\n  };\n\n  _proto.setQueryData = function setQueryData(queryKey, updater, config) {\n    this.buildQuery(queryKey, config).setData(updater);\n  };\n\n  return QueryCache;\n}();\nvar defaultQueryCache = new QueryCache({\n  frozen: isServer\n});\nexport { defaultQueryCache as queryCache };\nexport var queryCaches = [defaultQueryCache];\n/**\n * @deprecated\n */\n\nexport function makeQueryCache(config) {\n  return new QueryCache(config);\n}\nexport function onVisibilityOrOnlineChange(type) {\n  if (isDocumentVisible() && isOnline()) {\n    notifyManager.batch(function () {\n      queryCaches.forEach(function (queryCache) {\n        queryCache.getQueries().forEach(function (query) {\n          query.onInteraction(type);\n        });\n      });\n    });\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}