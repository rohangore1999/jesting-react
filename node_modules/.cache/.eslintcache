[{"/Users/rohangore/Documents/jesting-react/src/index.js":"1","/Users/rohangore/Documents/jesting-react/src/serviceWorker.js":"2","/Users/rohangore/Documents/jesting-react/src/reactQuery.js":"3","/Users/rohangore/Documents/jesting-react/src/App.js":"4","/Users/rohangore/Documents/jesting-react/src/pages/PostList.js":"5","/Users/rohangore/Documents/jesting-react/src/pages/PostEdit.js":"6","/Users/rohangore/Documents/jesting-react/src/pages/PostDetail.js":"7","/Users/rohangore/Documents/jesting-react/src/Utils/JSONUtil.js":"8","/Users/rohangore/Documents/jesting-react/src/components/CommentEdit.js":"9","/Users/rohangore/Documents/jesting-react/src/components/PostManage.js":"10","/Users/rohangore/Documents/jesting-react/src/components/CommentList.js":"11"},{"size":1071,"mtime":1601810072000,"results":"12","hashOfConfig":"13"},{"size":5086,"mtime":1601810072000,"results":"14","hashOfConfig":"13"},{"size":87,"mtime":1601810072000,"results":"15","hashOfConfig":"13"},{"size":2052,"mtime":1601810072000,"results":"16","hashOfConfig":"13"},{"size":2799,"mtime":1658139639036,"results":"17","hashOfConfig":"13"},{"size":870,"mtime":1601810072000,"results":"18","hashOfConfig":"13"},{"size":2645,"mtime":1601810072000,"results":"19","hashOfConfig":"13"},{"size":270,"mtime":1601810072000,"results":"20","hashOfConfig":"13"},{"size":1340,"mtime":1601810072000,"results":"21","hashOfConfig":"13"},{"size":2110,"mtime":1601810072000,"results":"22","hashOfConfig":"13"},{"size":1163,"mtime":1601810072000,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"1lkvg8r",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"27"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"27"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"27"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"27"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"27"},"/Users/rohangore/Documents/jesting-react/src/index.js",[],[],[],"/Users/rohangore/Documents/jesting-react/src/serviceWorker.js",[],[],"/Users/rohangore/Documents/jesting-react/src/reactQuery.js",[],[],"/Users/rohangore/Documents/jesting-react/src/App.js",["63","64","65"],[],"import React, { useEffect, useState } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport {\n  Box,\n  IconButton,\n  useColorMode,\n  useDisclosure,\n  useTheme,\n} from \"@chakra-ui/core\";\nimport { MdDehaze } from \"react-icons/md\";\n\nimport PostList from \"./pages/PostList\";\nimport PostEdit from \"./pages/PostEdit\";\nimport PostDetail from \"./pages/PostDetail\";\n\nfunction App() {\n  const { isOpen, onClose, onOpen, onToggle } = useDisclosure();\n\n  const { colorMode, toggleColorMode } = useColorMode();\n  const theme = useTheme();\n\n  return (\n    <Box h=\"100%\">\n      <Switch>\n        <Route exact path=\"/\">\n          <Redirect to=\"/posts\" />\n        </Route>\n        <Route path=\"/posts/new\">\n          <PostEdit />\n        </Route>\n\n        <Box h=\"100%\">\n          <Box\n            d=\"flex\"\n            padding=\".4rem\"\n            minHeight=\"40px\"\n            borderBottom={\n              colorMode === \"dark\"\n                ? `1px solid ${theme.colors.gray[\"700\"]}`\n                : \"1px solid #ccc\"\n            }\n            justifyContent={{\n              sm: \"space-between\",\n              md: \"flex-end\",\n            }}\n          >\n            <IconButton\n              display={{\n                sm: \"block\",\n                md: \"none\",\n              }}\n              onClick={onToggle}\n              icon={MdDehaze}\n            />\n            <IconButton icon=\"moon\" onClick={toggleColorMode} />\n          </Box>\n          <Box\n            maxW={{\n              sm: \"100%\",\n              md: \"80%\",\n              lg: \"60%\",\n            }}\n            padding={{\n              sm: \"2rem\",\n              md: \"0\",\n            }}\n            h=\"100%\"\n            marginX=\"auto\"\n            display=\"flex\"\n          >\n            <Route path=\"/posts\">\n              <PostList isDrawerOpen={isOpen} closeDrawer={onClose} />\n            </Route>\n            <Route path=\"/posts/:postId\">\n              <PostDetail />\n            </Route>\n          </Box>\n        </Box>\n      </Switch>\n    </Box>\n  );\n}\n\nexport default App;\n","/Users/rohangore/Documents/jesting-react/src/pages/PostList.js",["66","67","68","69","70"],[],"/Users/rohangore/Documents/jesting-react/src/pages/PostEdit.js",["71"],[],"import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Box } from \"@chakra-ui/core\";\n\nimport { Post } from \"../Utils/JSONUtil\";\nimport PostManage from \"../components/PostManage\";\nimport { useMutation } from \"react-query\";\n\nconst createPost = ({ title, description }) => {\n  return Post(\"http://localhost:3002/posts\", { title, description });\n};\n\nconst PostEdit = () => {\n  const { push } = useHistory();\n\n  const [mutate] = useMutation(createPost);\n\n  const onSubmitHandler = (values) => {\n    const { title, description } = values;\n\n    mutate({ title, description })\n      .then(() => {\n        push(\"/posts\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <Box maxW=\"40%\" marginX=\"auto\">\n      <PostManage onSubmit={onSubmitHandler} />\n    </Box>\n  );\n};\n\nexport default PostEdit;\n","/Users/rohangore/Documents/jesting-react/src/pages/PostDetail.js",["72","73","74"],[],"import {\n  Box,\n  Button,\n  IconButton,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  useColorMode,\n  useDisclosure,\n} from \"@chakra-ui/core\";\nimport React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Get, Put } from \"../Utils/JSONUtil\";\nimport { useMutation, useQuery } from \"react-query\";\n\nimport { queryCache } from \"../reactQuery\";\n\nimport PostManage from \"../components/PostManage\";\nimport CommentEdit from \"../components/CommentEdit\";\nimport CommentList from \"../components/CommentList\";\n\nconst editPost = ({ postId, title, description }) => {\n  return Put(`http://localhost:3002/posts/${postId}`, {\n    title,\n    description,\n  });\n};\n\nconst PostDetail = () => {\n  const { postId } = useParams();\n\n  const { isLoading, error, data, refetch } = useQuery(\"postdetail\", () => {\n    return Get(`http://localhost:3002/posts/${postId}`);\n  });\n\n  const [mutate] = useMutation(editPost);\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const onSubmitHandler = (values) => {\n    const { title, description } = values;\n\n    mutate({\n      postId,\n      title,\n      description,\n    })\n      .then(() => {\n        // Close Modal\n        onClose();\n        // refetch Detail\n        refetch();\n\n        // Refetch Post List\n        queryCache.refetchQueries([\"postlist\"]);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  useEffect(() => {\n    refetch();\n  }, [postId]);\n\n  return (\n    <Box w=\"100%\">\n      {isLoading ? (\n        <div>Loading</div>\n      ) : (\n        <>\n          <Box display=\"flex\" justifyContent=\"flex-end\">\n            <IconButton marginTop=\".6rem\" icon=\"edit\" onClick={onOpen} />\n          </Box>\n          <Box marginLeft=\".3rem\" marginTop=\"1rem\" minHeight=\"300px\">\n            {data.data.description}\n          </Box>\n\n          <CommentList postId={postId} />\n          <CommentEdit postId={postId} />\n          <Modal isOpen={isOpen} onClose={onClose}>\n            <ModalOverlay />\n            <ModalContent>\n              <ModalHeader>Post Manage</ModalHeader>\n              <ModalCloseButton />\n              <ModalBody>\n                <PostManage\n                  onSubmit={onSubmitHandler}\n                  defaultTitle={data.data.title}\n                  defaultDescription={data.data.description}\n                />\n              </ModalBody>\n              <ModalFooter>\n                <Button onClick={onClose}>Close</Button>\n              </ModalFooter>\n            </ModalContent>\n          </Modal>\n        </>\n      )}\n    </Box>\n  );\n};\n\nexport default PostDetail;\n","/Users/rohangore/Documents/jesting-react/src/Utils/JSONUtil.js",[],[],"/Users/rohangore/Documents/jesting-react/src/components/CommentEdit.js",["75"],[],"import {\n  Box,\n  Button,\n  FormControl,\n  FormLabel,\n  Input,\n  DarkMode,\n} from \"@chakra-ui/core\";\nimport React, { useState } from \"react\";\nimport { useMutation } from \"react-query\";\nimport { queryCache } from \"../reactQuery\";\nimport { Post } from \"../Utils/JSONUtil\";\n\nconst createComment = ({ content, postId }) => {\n  return Post(\"http://localhost:3002/comments\", { content, postId });\n};\n\nconst CommentEdit = ({ postId }) => {\n  const [content, setContent] = useState(\"\");\n\n  const [mutate] = useMutation(createComment);\n\n  const onSubmitHandler = (event) => {\n    event.preventDefault();\n    console.log(\"===\");\n\n    mutate({ content, postId }).then(() => {\n      setContent(\"\");\n\n      queryCache.refetchQueries([\"commentlist\"]);\n    });\n\n    // Post API Call\n  };\n\n  return (\n    <Box marginX=\".4rem\">\n      <form onSubmit={onSubmitHandler}>\n        <FormControl>\n          <FormLabel htmlFor=\"content\">Comment Content</FormLabel>\n          <Input\n            type=\"text\"\n            id=\"content\"\n            value={content}\n            onChange={(e) => setContent(e.target.value)}\n            aria-describedby=\"content-helper-text\"\n          />\n        </FormControl>\n        <Box marginTop=\".3rem\">\n          <Button type=\"submit\">Add Comment</Button>\n        </Box>\n      </form>\n    </Box>\n  );\n};\n\nexport default CommentEdit;\n","/Users/rohangore/Documents/jesting-react/src/components/PostManage.js",[],[],"/Users/rohangore/Documents/jesting-react/src/components/CommentList.js",["76"],[],"import { List, ListItem, useColorMode, useTheme } from \"@chakra-ui/core\";\nimport React, { useEffect } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { Get } from \"../Utils/JSONUtil\";\n\nconst CommentList = ({ postId }) => {\n  const { isLoading, error, data, refetch } = useQuery(\"commentlist\", () => {\n    return Get(`http://localhost:3002/comments?postId=${postId}`);\n  });\n\n  const { colorMode } = useColorMode();\n  const theme = useTheme();\n\n  useEffect(() => {\n    refetch();\n  }, [postId]);\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  if (error) {\n    return <div>Something went wrong</div>;\n  }\n\n  return (\n    <List marginBottom=\".8rem\" ml=\".8rem\">\n      {data.data.map((commentItem) => {\n        return (\n          <ListItem\n            padding=\".9rem\"\n            mt=\".9rem\"\n            boxShadow=\"md\"\n            bg={\n              colorMode === \"dark\"\n                ? theme.colors.gray[\"900\"]\n                : theme.colors.gray[\"100\"]\n            }\n            key={commentItem.id}\n          >\n            {commentItem.content}\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n};\n\nexport default CommentList;\n",{"ruleId":"77","severity":1,"message":"78","line":1,"column":17,"nodeType":"79","messageId":"80","endLine":1,"endColumn":26},{"ruleId":"77","severity":1,"message":"81","line":1,"column":28,"nodeType":"79","messageId":"80","endLine":1,"endColumn":36},{"ruleId":"77","severity":1,"message":"82","line":17,"column":28,"nodeType":"79","messageId":"80","endLine":17,"endColumn":34},{"ruleId":"77","severity":1,"message":"83","line":14,"column":3,"nodeType":"79","messageId":"80","endLine":14,"endColumn":8},{"ruleId":"77","severity":1,"message":"78","line":18,"column":17,"nodeType":"79","messageId":"80","endLine":18,"endColumn":26},{"ruleId":"77","severity":1,"message":"81","line":18,"column":28,"nodeType":"79","messageId":"80","endLine":18,"endColumn":36},{"ruleId":"77","severity":1,"message":"84","line":20,"column":8,"nodeType":"79","messageId":"80","endLine":20,"endColumn":13},{"ruleId":"77","severity":1,"message":"85","line":26,"column":22,"nodeType":"79","messageId":"80","endLine":26,"endColumn":27},{"ruleId":"77","severity":1,"message":"81","line":1,"column":17,"nodeType":"79","messageId":"80","endLine":1,"endColumn":25},{"ruleId":"77","severity":1,"message":"86","line":12,"column":3,"nodeType":"79","messageId":"80","endLine":12,"endColumn":15},{"ruleId":"77","severity":1,"message":"85","line":36,"column":22,"nodeType":"79","messageId":"80","endLine":36,"endColumn":27},{"ruleId":"87","severity":1,"message":"88","line":68,"column":6,"nodeType":"89","endLine":68,"endColumn":14,"suggestions":"90"},{"ruleId":"77","severity":1,"message":"91","line":7,"column":3,"nodeType":"79","messageId":"80","endLine":7,"endColumn":11},{"ruleId":"87","severity":1,"message":"88","line":16,"column":6,"nodeType":"89","endLine":16,"endColumn":14,"suggestions":"92"},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'onOpen' is assigned a value but never used.","'Input' is defined but never used.","'axios' is defined but never used.","'error' is assigned a value but never used.","'useColorMode' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'refetch'. Either include it or remove the dependency array.","ArrayExpression",["93"],"'DarkMode' is defined but never used.",["94"],{"desc":"95","fix":"96"},{"desc":"95","fix":"97"},"Update the dependencies array to be: [postId, refetch]",{"range":"98","text":"99"},{"range":"100","text":"99"},[1496,1504],"[postId, refetch]",[497,505]]